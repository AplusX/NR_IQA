 
试用libsvm进行了第一次分类实验

以前看过了libsvm的文档 
但是从来没有做实验 
这次试运行了一下 
感觉其中的那个归一化的程序不太好 
归一化后结果没有保存为文件 
自己改写了一下，将结果另外存为了文件 
另外，因为libsvm的格式要求 
自己写了一个matlab函数 
将保存的mat文件转存为符合格式要求的文件 
运行的结果做交叉验证还可以 

Accuracy = 93.3333% (56/60) (classification) 
Mean squared error = 0.266667 (regression) 
Squared correlation coefficient = 0.764706 (regression) 

这个实验是从其他地方看到的比较接近实际问题的 
以前没有用其他方法做过对比实验 
如果有时间，希望那个采用其他方法做个对比实验 
譬如采用nn，或者是其他的方法 

附1. 
实验实例： 
下面这组数据的前30个为还没有确诊的sars病例化验结果； 
31－60为确诊为sars病人的化验结果； 
后30个为确诊的健康人的化验结果。 
问题为： 
根据这些数据，判断前30名就诊人员是否是sars患者。 
（另外，有个问题，根据这些数据特征，确定哪些指标是影响 
人们患sars的关键或主要因素，以减少化验的指标） 

【我有xls与txt格式的数据，感兴趣想做实验的可以留言】 

Zn Cu Fe Ca Mg K Na 
1 58.2 5.42 29.7 323 138 179 513 
2 106 1.87 40.5 542 177 184 427 
3 152 0.80 12.5 1332 176 128 646 
4 85.5 1.70 3.99 503 62.3 238 762.6 
5 144 0.70 15.1 547 79.7 71.0 218.5 
6 85.7 1.09 4.2 790 170 45.8 257.9 
7 144 0.30 9.11 417 552 49.5 141.5 
8 170 4.16 9.32 943 260 155 680.8 
9 176 0.57 27.3 318 133 99.4 318.8 
10 192 7.06 32.9 1969 343 103 553 
11 188 8.28 22.6 1208 231 1314 1372 
12 153 5.87 34.8 328 163 264 672.5 
13 143 2.84 15.7 265 123 73.0 347.5 
14 213 19.1 36.2 2220 249 62.0 465.8 
15 192 20.1 23.8 1606 156 40.0 168 
16 171 10.5 30.5 672 145 47.0 330.5 
17 162 13.2 19.8 1521 166 36.2 133 
18 203 13.0 90.8 1544 162 98.9 394.5 
19 164 20.1 28.9 1062 161 47.3 134.5 
20 167 13.1 14.1 2278 212 36.5 96.5 
21 164 12.9 18.6 2993 197 65.5 237.8 
22 167 15.0 27.0 2056 260 44.8 72.0 
23 158 14.4 37.0 1025 101 180 899.5 
24 133 22.8 31.3 1633 401 228 289 
25 169 8.0 30.8 1068 99.1 53.0 817 
26 247 17.3 8.65 2554 241 77.5 373.5 
27 185 3.90 31.3 1211 190 134 649.8 
28 209 6.43 86.9 2157 288 74.0 219.8 
29 182 6.49 61.7 3870 432 143 367.5 
30 235 15.6 23.4 1806 166 68.9 188 
31 166 15.8 24.5 700 112 179 513 
32 185 15.7 31.5 701 125 184 427 
33 193 9.80 25.9 541 163 128 642 
34 159 14.2 39.7 896 99.2 239 726 
35 226 16.2 23.8 606 152 70.3 218 
36 171 9.29 9.29 307 187 45.5 257 
37 201 13.3 26.6 551 101 49.4 141 
38 147 14.5 30.0 659 102 154 680 
39 172 8.85 7.86 551 75.7 98.4 318 
40 156 11.5 32.5 639 107 103 552 
41 132 15.9 17.7 578 92.4 1314 1372 
42 182 11.3 11.3 767 111 264 672 
43 186 9.26 37.1 958 233 73.0 347 
44 162 8.23 27.1 625 108 62.4 465 
45 150 6.63 21.0 627 140 179 639 
46 159 10.7 11.7 612 190 98.5 390 
47 117 16.1 7.04 988 95.5 136 572 
48 181 10.1 4.04 1437 184 101 542 
49 146 20.7 23.8 1232 128 150 1092 
50 42.3 10.3 9.70 629 93.7 439 888 
51 28.2 12.4 53.1 370 44.1 454 852 
52 154 13.8 53.3 621 105 160 723 
53 179 12.2 17.9 1139 150 45.2 218 
54 13.5 3.36 16.8 135 32.6 51.6 182 
55 175 5.84 24.9 807 123 55.6 126 
56 113 15.8 47.3 626 53.6 168 627 
57 50.5 11.6 6.30 608 58.9 58.9 139 
58 78.6 14.6 9.70 421 70.8 133 464 
59 90.0 3.27 8.17 622 52.3 770 852 
60 178 28.8 32.4 992 112 70.2 169 
61 213 19.1 36.2 2220 249 40.0 168 
62 170 13.9 29.8 1285 226 47.9 330 
63 162 13.2 19.8 1521 166 36.2 133 
64 203 13.0 90.8 1544 162 98.90 394 
65 167 13.1 14.1 2278 212 46.3 134 
66 164 12.9 18.6 2993 197 36.3 94.5 
67 167 15.0 27.0 2056 260 64.6 237 
68 158 14.4 37.0 1025 101 44.6 72.5 
69 133 22.8 31.0 1633 401 180 899 
70 156 135 322 6747 1090 228 810 
71 169 8.00 308 1068 99.1 53.0 289 
72 247 17.3 8.65 2554 241 77.9 373 
73 166 8.10 62.8 1233 252 134 649 
74 209 6.43 86.9 2157 288 74.0 219 
75 182 6.49 61.7 3870 432 143 367 
76 235 15.6 23.4 1806 166 68.8 188 
77 173 19.1 17.0 2497 295 65.8 287 
78 151 19.7 64.2 2031 403 182 874 
79 191 65.4 35.0 5361 392 137 688 
80 223 24.4 86.0 3603 353 97.7 479 
81 221 20.1 155 3172 368 150 739 
82 217 25.0 28.2 2343 373 110 494 
83 164 22.2 35.5 2212 281 153 549 
84 173 8.99 36.0 1624 216 103 257 
85 202 18.6 17.7 3785 225 31.0 67.3 
86 182 17.3 24.8 3073 246 50.7 109 
87 211 24.0 17.0 3836 428 73.5 351 
88 246 21.5 93.2 2112 354 71.7 195 
89 164 16.1 38.0 2135 152 64.3 240 
90 179 21.0 35.0 1560 226 47.9 330 


附2： 
转存函数 

function write4libsvm 
% 为了使得数据满足libsvm的格式要求而进行的数据格式转换 
% 原始数据保存格式为: 
%             [标签 第一个属性值 第二个属性值...] 
% 转换后文件格式为满足libsvm的格式要求，即: 
%             [标签 1:第一个属性值 2:第二个属性值 3:第三个属性值 ...] 
% Genial@ustc 
% 2004.6.16 
[filename, pathname] = uigetfile( {'*.mat', ... 
       '数据文件(*.mat)'; ... 
       '*.*',                   '所有文件 (*.*)'}, ... 
   '选择数据文件'); 
try 
   S=load([pathname filename]); 
   fieldName = fieldnames(S); 
   str = cell2mat(fieldName); 
   B = getfield(S,str); 
   [m,n] = size(B); 
   [filename, pathname] = uiputfile({'*.txt;*.dat' ,'数据文件(*.txt;*.dat)';'*.*','所有文件 (*.*)'},'保存数据文件'); 
   fid = fopen([pathname filename],'w'); 
   if(fid~=-1) 
       for k=1:m 
           fprintf(fid,'%3d',B(k,1)); 
           for kk = 2:n 
               fprintf(fid,'\t%d',(kk-1)); 
               fprintf(fid,':'); 
               fprintf(fid,'%d',B(k,kk)); 
           end 
           k 
           fprintf(fid,'\n'); 
       end 
       fclose(fid); 
   else 
       msgbox('无法保存文件!'); 
   end 
catch 
end  
